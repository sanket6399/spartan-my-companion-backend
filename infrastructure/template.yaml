AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  spartanuserlogin:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:us-east-1:730335579154:table/Users
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource:
                - arn:aws:dynamodb:*:730335579154:table/*/index/*
                - arn:aws:dynamodb:us-east-1:730335579154:table/Users
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan_user_login:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api3:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api4:
          Type: Api
          Properties:
            Path: /spartan-user-login
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  spartanquestionposting:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:us-east-1:730335579154:table/Questions
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan_question_posting:*
            - Action:
                - sqs:*
              Effect: Allow
              Resource: '*'
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /spartan-question-posting
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  spartanpostreply:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-post-reply:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /spartan-reply-posting
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartaneventupvote:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-event-upvote:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /spartan-event-upvote
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartangetuserbasedquestions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: '*'
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:730335579154:table/*/index/*
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:730335579154:table/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-get-userbased-questions:*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartansendmessage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - execute-api:*
              Resource: '*'
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:ListContributorInsights
                - dynamodb:DescribeReservedCapacityOfferings
                - dynamodb:ListGlobalTables
                - dynamodb:ListTables
                - dynamodb:DescribeReservedCapacity
                - dynamodb:ListBackups
                - dynamodb:PurchaseReservedCapacityOfferings
                - dynamodb:ListImports
                - dynamodb:DescribeLimits
                - dynamodb:DescribeEndpoints
                - dynamodb:ListExports
                - dynamodb:ListStreams
              Resource: '*'
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: arn:aws:dynamodb:us-east-1:730335579154:table/ChatMessages
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-send-message:*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartanchatdefault:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-chat-default:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartandisconnectchat:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-disconnect-chat:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api3:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartangetallusers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:730335579154:table/*/index/*
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:730335579154:table/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-get-all-users:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /spartan-get-allUsers
            Method: GET
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartangetquestions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:ListContributorInsights
                - dynamodb:DescribeReservedCapacityOfferings
                - dynamodb:ListGlobalTables
                - dynamodb:ListTables
                - dynamodb:DescribeReservedCapacity
                - dynamodb:ListBackups
                - dynamodb:PurchaseReservedCapacityOfferings
                - dynamodb:ListImports
                - dynamodb:DescribeLimits
                - dynamodb:DescribeEndpoints
                - dynamodb:ListExports
                - dynamodb:ListStreams
              Resource: '*'
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:*
              Resource:
                - arn:aws:dynamodb::730335579154:global-table/*
                - arn:aws:dynamodb:*:730335579154:table/*/stream/*
                - arn:aws:dynamodb:*:730335579154:table/*/export/*
                - arn:aws:dynamodb:*:730335579154:table/*/backup/*
                - arn:aws:dynamodb:*:730335579154:table/*/import/*
                - arn:aws:dynamodb:*:730335579154:table/*/index/*
            - Sid: VisualEditor2
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: arn:aws:dynamodb:*:730335579154:table/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan_get_questions:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api3:
          Type: Api
          Properties:
            Path: /spartan-get-questions
            Method: GET
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  spartanusersignup:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan_user_signup:*
            - Action:
                - dynamodb:*
                - dax:*
                - application-autoscaling:DeleteScalingPolicy
                - application-autoscaling:DeregisterScalableTarget
                - application-autoscaling:DescribeScalableTargets
                - application-autoscaling:DescribeScalingActivities
                - application-autoscaling:DescribeScalingPolicies
                - application-autoscaling:PutScalingPolicy
                - application-autoscaling:RegisterScalableTarget
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - cloudwatch:PutMetricAlarm
                - cloudwatch:GetMetricData
                - datapipeline:ActivatePipeline
                - datapipeline:CreatePipeline
                - datapipeline:DeletePipeline
                - datapipeline:DescribeObjects
                - datapipeline:DescribePipelines
                - datapipeline:GetPipelineDefinition
                - datapipeline:ListPipelines
                - datapipeline:PutPipelineDefinition
                - datapipeline:QueryObjects
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
                - iam:GetRole
                - iam:ListRoles
                - kms:DescribeKey
                - kms:ListAliases
                - sns:CreateTopic
                - sns:DeleteTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - sns:Unsubscribe
                - sns:SetTopicAttributes
                - lambda:CreateFunction
                - lambda:ListFunctions
                - lambda:ListEventSourceMappings
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:GetFunctionConfiguration
                - lambda:DeleteFunction
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
                - resource-groups:GetGroup
                - resource-groups:GetGroupQuery
                - resource-groups:DeleteGroup
                - resource-groups:CreateGroup
                - tag:GetResources
                - kinesis:ListStreams
                - kinesis:DescribeStream
                - kinesis:DescribeStreamSummary
              Effect: Allow
              Resource: '*'
            - Action:
                - cloudwatch:GetInsightRuleReport
              Effect: Allow
              Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - application-autoscaling.amazonaws.com
                    - application-autoscaling.amazonaws.com.cn
                    - dax.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - replication.dynamodb.amazonaws.com
                    - dax.amazonaws.com
                    - dynamodb.application-autoscaling.amazonaws.com
                    - contributorinsights.dynamodb.amazonaws.com
                    - kinesisreplication.dynamodb.amazonaws.com
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /spartan_user_signup
            Method: POST
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  spartanpostquestiondb:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-post-question-db:*
            - Action:
                - sqs:*
              Effect: Allow
              Resource: '*'
            - Action:
                - dynamodb:*
                - dax:*
                - application-autoscaling:DeleteScalingPolicy
                - application-autoscaling:DeregisterScalableTarget
                - application-autoscaling:DescribeScalableTargets
                - application-autoscaling:DescribeScalingActivities
                - application-autoscaling:DescribeScalingPolicies
                - application-autoscaling:PutScalingPolicy
                - application-autoscaling:RegisterScalableTarget
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - cloudwatch:PutMetricAlarm
                - cloudwatch:GetMetricData
                - datapipeline:ActivatePipeline
                - datapipeline:CreatePipeline
                - datapipeline:DeletePipeline
                - datapipeline:DescribeObjects
                - datapipeline:DescribePipelines
                - datapipeline:GetPipelineDefinition
                - datapipeline:ListPipelines
                - datapipeline:PutPipelineDefinition
                - datapipeline:QueryObjects
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
                - iam:GetRole
                - iam:ListRoles
                - kms:DescribeKey
                - kms:ListAliases
                - sns:CreateTopic
                - sns:DeleteTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - sns:Unsubscribe
                - sns:SetTopicAttributes
                - lambda:CreateFunction
                - lambda:ListFunctions
                - lambda:ListEventSourceMappings
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:GetFunctionConfiguration
                - lambda:DeleteFunction
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
                - resource-groups:GetGroup
                - resource-groups:GetGroupQuery
                - resource-groups:DeleteGroup
                - resource-groups:CreateGroup
                - tag:GetResources
                - kinesis:ListStreams
                - kinesis:DescribeStream
                - kinesis:DescribeStreamSummary
              Effect: Allow
              Resource: '*'
            - Action:
                - cloudwatch:GetInsightRuleReport
              Effect: Allow
              Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - application-autoscaling.amazonaws.com
                    - application-autoscaling.amazonaws.com.cn
                    - dax.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - replication.dynamodb.amazonaws.com
                    - dax.amazonaws.com
                    - dynamodb.application-autoscaling.amazonaws.com
                    - contributorinsights.dynamodb.amazonaws.com
                    - kinesisreplication.dynamodb.amazonaws.com
      SnapStart:
        ApplyOn: None
      Events:
        SQS1:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
                - SQSQueue1
                - Arn
            BatchSize: 10
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  SQSQueue1:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue1
      SqsManagedSseEnabled: true
  spartanconnectchat:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:*
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:730335579154:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:730335579154:log-group:/aws/lambda/spartan-connect-chat:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /MyResource
            Method: $connect
        Api3:
          Type: Api
          Properties:
            Path: /MyResource
            Method: ANY
        Api4:
          Type: Api
          Properties:
            Path: /MyResource
            Method: $disconnect
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
